Turbo Assembler	 Version 4.1	    03/27/13 18:47:33	    Page 1
ex5.ASM



      1				     ;Declare data
      2	0000			     data segment use16
      3	0000  0A 0D 4E 6F 74 20	68+	     mesError  db  10,13,"Not hexa!$",10,13
      4	      65 78 61 21 24 0A	0D
      5	000E			     data ends
      6				     ;
      7				     ;declare pile
      8	0000			     pile segment stack
      9	0000  0190*(????)		     remplissage dw 400	dup(?)
     10	0320			     pile ends
     11				     ;
     12				     ;Declare code
     13	0000			     code segment use16
     14
     15				     assume cs:code,ds:data,ss:pile,es:data
     16				     ;Procedure
     17				     ;
     18				     ;Applique le complement a 2 à ax
     19	0000			     complement_ax proc	near
     20	0000  D1 C0			     rol ax,1
     21	0002  73 07			     jnc sortir
     22	0004  D1 C8			     ror ax,1
     23	0006  2D 0001			     sub ax,1
     24	0009  F7 D0			     not ax
     25	000B				     sortir:
     26	000B  C3			     ret
     27	000C			     complement_ax endp
     28	000C			     hex_digit proc near
     29	000C  52 50			     push dx ax
     30	000E  80 C2 30			     add dl,'0'
     31	0011  80 FA 39			     cmp dl,'9'
     32	0014  76 03			     jbe showdigit
     33	0016  80 C2 07			     add dl,7
     34	0019				     showdigit:
     35	0019  B4 02			     mov ah,02h
     36	001B  CD 21			     int 21h
     37	001D  58 5A			     pop ax dx
     38	001F  C3			     ret
     39	0020			     hex_digit endp
     40				     ;
     41	0020			     print_al proc near
     42	0020  52			     push dx
     43	0021  8A D0			     mov dl,al
     44	0023  D0 EA D0 EA D0 EA	D0+	     shr dl,4
     45	      EA
     46	002B  E8 FFDE			     call hex_digit
     47	002E  8A D0			     mov dl,al
     48	0030  80 E2 0F			     and dl,0fh
     49	0033  E8 FFD6			     call hex_digit
     50	0036  5A			     pop dx
     51	0037  C3			     ret
     52	0038			     print_al endp
     53
     54	0038			     print_ax proc near
     55	0038  50			     push ax
     56	0039  E8 FFC4			     call complement_ax
     57	003C  73 07			     jnc passigne
Turbo Assembler	 Version 4.1	    03/27/13 18:47:33	    Page 2
ex5.ASM



     58	003E  50			     push ax
     59	003F  B0 2D			     mov al,'-'
     60	0041  E8 0041			     call co
     61	0044  58			     pop ax
     62	0045				     passigne:
     63	0045  D1 C8 D1 C8 D1 C8	D1+	     ror ax,8
     64	      C8 D1 C8 D1 C8 D1	C8+
     65	      D1 C8
     66	0055  E8 FFC8			     call print_al
     67	0058  D1 C8 D1 C8 D1 C8	D1+	     ror ax,8
     68	      C8 D1 C8 D1 C8 D1	C8+
     69	      D1 C8
     70	0068  E8 FFB5			     call print_al
     71	006B  C3			     ret
     72	006C  58			     pop ax
     73	006D			     print_ax endp
     74
     75	006D			     conv_hex proc near
     76	006D  2C 30			     sub al,'0'
     77	006F  72 0E			     jb	hret
     78	0071  3C 0A			     cmp al,10
     79	0073  F5			     cmc
     80	0074  73 09			     jnb hret
     81	0076  2C 07			     sub al,7
     82	0078  3C 0A			     cmp al,10
     83	007A  72 03			     jb	hret
     84	007C  3C 10			     cmp al,10h
     85	007E  F5			     cmc
     86	007F				     hret:
     87	007F  C3			     ret
     88	0080			     conv_hex endp
     89	0080			     ci	proc near
     90	0080  B4 01			     mov ah,01h
     91	0082  CD 21			     int 21h
     92	0084  C3			     ret
     93	0085			     ci	endp
     94	0085			     co	proc near
     95	0085  50 52			     push ax dx
     96	0087  8A D0			     mov dl,al
     97	0089  B4 02			     mov ah,02h
     98	008B  CD 21			     int 21h
     99	008D  5A 58			     pop dx ax
    100	008F  C3			     ret
    101	0090			     co	endp
    102	0090			     crlf proc near
    103	0090  50 52			     push ax dx
    104	0092  B4 02			     mov ah,02h
    105	0094  B2 0A			     mov dl,10
    106	0096  CD 21			     int 21h
    107	0098  B2 0D			     mov dl,13
    108	009A  CD 21			     int 21h
    109	009C  5A 58			     pop dx ax
    110	009E  C3			     ret
    111	009F			     crlf endp
    112	009F			     ci_wordhex	proc near
    113	009F  E8 FFDE			     call ci
    114	00A2  E8 FFC8			     call conv_hex
Turbo Assembler	 Version 4.1	    03/27/13 18:47:33	    Page 3
ex5.ASM



    115	00A5  72 37			     jc	fault
    116	00A7  D0 E0 D0 E0 D0 E0	D0+	     shl al,4
    117	      E0
    118	00AF  8A D8			     mov bl,al
    119	00B1  E8 FFCC			     call ci
    120	00B4  E8 FFB6			     call conv_hex
    121	00B7  72 25			     jc	fault
    122	00B9  0A C3			     or	al,bl
    123	00BB  8A F8			     mov bh,al
    124	00BD  E8 FFC0			     call ci
    125	00C0  E8 FFAA			     call conv_hex
    126	00C3  72 19			     jc	fault
    127	00C5  D0 E0 D0 E0 D0 E0	D0+	     shl al,4
    128	      E0
    129	00CD  8A D8			     mov bl,al
    130	00CF  E8 FFAE			     call ci
    131	00D2  E8 FF98			     call conv_hex
    132	00D5  72 07			     jc	fault
    133	00D7  0A C3			     or	al,bl
    134	00D9  8A E7			     mov ah,bh
    135	00DB  EB 08 90			     jmp ishexa
    136	00DE				     fault:
    137	00DE  BA 0000r			     lea dx,mesError
    138	00E1  B4 09			     mov ah,09h
    139	00E3  CD 21			     int 21h
    140	00E5				     ishexa:
    141	00E5  C3			     ret
    142	00E6			     ci_wordhex	endp
    143				     ;
    144				     ;Fin procedure
    145	00E6			     debut:
    146	00E6  B8 0000s			     mov ax, data
    147	00E9  8E D8			     mov ds,ax
    148
    149					     ;wchar:
    150					     ;	     call ci
    151					     ;	     cmp al,'$'
    152					     ;	     je	break
    153					     ;	     call conv_hex ;convertit al en hexa si le code ascii correspond
    154					     ;	     call crlf
    155					     ;	     jc	notprint
    156					     ;	     shl al,4
    157					     ;	     call print_al
    158					     ;	     call crlf
    159					     ;	     notprint:
    160					     ;jmp wchar
    161					     ;break:
    162					     ;call ci_wordhex
    163					     ;call crlf
    164	00EB  B8 FFE2			     mov ax,-30
    165	00EE  E8 FF47			     call print_ax
    166					     ;Quitter
    167	00F1  B4 4C			     mov ah,4ch
    168	00F3  CD 21			     int 21h
    169
    170	00F5			     code ends
    171					      end debut
Turbo Assembler	 Version 4.1	    03/27/13 18:47:33	    Page 4
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "03/27/13"
??FILENAME		Text   "ex5	"
??TIME			Text   "18:47:33"
??VERSION		Number 040A
@CPU			Text   0101H
@CURSEG			Text   CODE			   #2  #8  #13
@FILENAME		Text   EX5
@WORDSIZE		Text   2			   #2  #8  #13
CI			Near   CODE:0080		   #89	113  119  124  130
CI_WORDHEX		Near   CODE:009F		   #112
CO			Near   CODE:0085		   60  #94
COMPLEMENT_AX		Near   CODE:0000		   #19	56
CONV_HEX		Near   CODE:006D		   #75	114  120  125  131
CRLF			Near   CODE:0090		   #102
DEBUT			Near   CODE:00E6		   #145	 171
FAULT			Near   CODE:00DE		   115	121  126  132  #136
HEX_DIGIT		Near   CODE:000C		   #28	46  49
HRET			Near   CODE:007F		   77  80  83  #86
ISHEXA			Near   CODE:00E5		   135	#140
MESERROR		Byte   DATA:0000		   #3  137
PASSIGNE		Near   CODE:0045		   57  #62
PRINT_AL		Near   CODE:0020		   #41	66  70
PRINT_AX		Near   CODE:0038		   #54	165
REMPLISSAGE		Word   PILE:0000		   #9
SHOWDIGIT		Near   CODE:0019		   32  #34
SORTIR			Near   CODE:000B		   21  #25

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  00F5 Para	none		   #13	15
DATA			16  000E Para	none		   #2  15  15  146
PILE			16  0320 Para	Stack		   #8  15
